function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1))
        ;[array[i], array[j]] = [array[j], array[i]]
    }
    return array
}

var color_cues = shuffleArray(["red", "blue", "green"])
color_cues = {
    AI: color_cues[0],
    Human: color_cues[1],
    Forgery: color_cues[2],
}

function assignCondition(stimuli_list) {
    let new_stimuli_list = []
    
    for (let style of [...new Set(stimuli_list.map((a) => a.Style))]) {
        
        var style_stimuli = stimuli_list.filter((a) => a.Style == style)

       
        style_stimuli = shuffleArray(style_stimuli)

        
        let conditions = ["AI", "Human", "Forgery"]
        let third = Math.floor(style_stimuli.length / 3) 
        let remainder = style_stimuli.length % 3

        let index = 0
        for (let i = 0; i < 3; i++)
            for (let j = 0; j < third; j++) {
                style_stimuli[index].Condition = conditions[i]
                index++
            }

        let shuffledConditions = shuffleArray(conditions)
        for (let i = 0; i < remainder; i++) {
            style_stimuli[index].Condition = shuffledConditions[i]
            index++
        }

        
        new_stimuli_list.push(...style_stimuli)
    }
    return shuffleArray(new_stimuli_list)
}




var fiction_trialnumber = 1


stimuli = assignCondition(stimuli_list)


var fiction_preloadstims = {
    type: jsPsychPreload,
    images: stimuli_list.map((a) => "stimuli/stimuli/" + a.Item),
    message: "Please wait while the experiment is loading in (it can take a few minutes).",
}




var fiction_fixation = {
    type: jsPsychHtmlKeyboardResponse,
    stimulus: "<div  style='font-size:500%; position:fixed; text-align: center; top:50%; bottom:50%; right:20%; left:20%'>+</div>",
    choices: ["s"],
    trial_duration: 750,
    save_trial_parameters: { trial_duration: true },
    data: { screen: "fiction_fixation" },
}


 var fiction_showimage = {
    type: jsPsychImageKeyboardResponse,
    stimulus: function () {
        return "stimuli/stimuli/" + jsPsych.evaluateTimelineVariable("Item")
    },
    stimulus_width: function () {
        let ratio = jsPsych.evaluateTimelineVariable("Width") / jsPsych.evaluateTimelineVariable("Height")
        return Math.round(Math.min(0.9 * window.innerHeight * ratio, 0.9 * window.innerWidth))
    },

    stimulus_height: function () {
        let ratio = jsPsych.evaluateTimelineVariable("Width") / jsPsych.evaluateTimelineVariable("Height")
        return Math.round(Math.min((0.9 * window.innerWidth) / ratio, 0.9 * window.innerHeight))
    },
    trial_duration: 1500,
    choices: ["s"],
    save_trial_parameters: { trial_duration: true },
    data: function () {
        return {
            screen: "fiction_image",
            trial_number: fiction_trialnumber,
            item: jsPsych.evaluateTimelineVariable("Item"),
        }
    },
    on_finish: function () {
        fiction_trialnumber += 1
    },
} 


var fiction_ratings = {
    type: jsPsychSurvey,
    survey_json: {
        goNextPageAutomatic: false,
        showQuestionNumbers: false,
        completeText: "Continue",
        showNavigationButtons: true,
         title: function () {
            return "Rating - " + Math.round(((fiction_trialnumber - 1) / stimuli.length) * 100) + "%"
        },
        description: "Do you recognise the artwork?",
        pages: [
            {
                elements: [
                    {
                      type: "radiogroup",
                      name: "Recognition",
                      title: "I recognise this artwork from the previous study",
                      isRequired: true,
                      choices: ["Yes", "No"],
                    },

{
                      type: "rating",
                      name: "DisplayLabel",
                      title: "In the previous study, this artwork was labelled as...",
                      isRequired: true,
                      visibleIf: "{Recognition} = 'Yes'",
                      css_classes: ["colored-scale"],
                      displayMode: "buttons",
                      rateValues: [
                            { value: 0, text: "Original" },
                            { value: 1, text: "AI-Generated" },
                            { value: 2, text: "Human Forgery" },
                      ],
                    },



                    {
                        type: "slider",
                        name: "Reality",
                        title: "In the previous study, I thought this artwork was...",
                        description: "Was the artwork painted by a person or generated by an AI?",
                        isRequired: true,
                        visibleIf: "{Recognition} = 'Yes'",
                        
                        min: -100,
                        max: 100,
                        step: 1,
                        customLabels: [
                            {
                                value: -100,
                                text: " AI-Generated",
                            },
                            {
                                value: 100,
                                text: "Human Creation",
                            },
                        ],
                        
                    },
                    {
                        type: "slider",
                        name: "Authenticity",
                        title: "In the previous study, I thought this artwork was a...",
                        description: "Is the artwork original and unique, or was it made to copy an existing artwork or artist?",
                        isRequired: true,
                        visibleIf: "{Recognition} = 'Yes'",
                        
                        min: -100,
                        max: 100,
                        step: 1,
                        customLabels: [
                            {
                                value: -100,
                                text: "Copy / Forgery",
                            },
                            {
                                value: 100,
                                text: "Original Creation",
                            },
                        ],
                       
                    },
                     /*{
                        type: "slider",
                        name: "Familiarity",
                        title: "This artwork is...",
                        description: "To what extent do you recall seeing this artwork in the previous study?",
                        isRequired: true,
                        visibleIf: "{Recognition} = 'Yes'",
                        
                        min: -100,
                        max: 100,
                        step: 1,
                        customLabels: [
                            {
                                value: -100,
                                text: "Unfamiliar",
                            },
                            {
                                value: 100,
                                text: "Familiar",
                            },
                        ],
                      
                    }, */
           
                ],
            },
        ],
    },
    data: {
        screen: "fiction_ratings",
    },
}


var fiction_phase = {
    timeline_variables: shuffleArray(stimuli),
    timeline: [fiction_fixation, fiction_showimage, fiction_ratings],
}
