// Condition assignment ============================================
function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1))
        ;[array[i], array[j]] = [array[j], array[i]]
    }
    return array
}

function assignCondition(stimuli_list) {
    let new_stimuli_list = []
    // Loop through unique styles
    for (let style of [...new Set(stimuli_list.map((a) => a.Style))]) {
        // Get all stimuli of this style
        var style_stimuli = stimuli_list.filter((a) => a.Style == style)

        // Shuffle style_stimuli
        style_stimuli = shuffleArray(style_stimuli) // Custom function defined above

        // Assign condition to each image
        let conditions = ["AI", "Human", "Forgery"];
        let third = Math.floor(style_stimuli.length/3); // Base number of images for each condition
        let remainder = style_stimuli.length % 3; // Extra images

        let index = 0;
        for (let i = 0; i < 3; i++)
            for (let j = 0; j < third; j++){
        style_stimuli[index].Condition = conditions[i];
        index++
    }
        
        let shuffledConditions = shuffleArray(conditions) // Shuffle conditions to assign extra images to
        for (let i = 0; i < remainder; i++){
            style_stimuli[index].Condition = shuffledConditions[i];
            index++;
        }

        // Add to new_stimuli_list
        new_stimuli_list.push(...style_stimuli)
    }
    return shuffleArray(new_stimuli_list)
}

// Variables ===================================================================
var fiction_trialnumber = 1
var color_cues = shuffleArray(["red", "blue", "green"])

color_cues = {
    AI: color_cues[0], 
    Human: color_cues[1],
    Forgery: color_cues[2]
}

var text_cue = { 
    AI: "AI-Generated", 
    Human: "Human-Original",
    Forgery: "Human-Forgery"
}

stimuli = assignCondition(stimuli_list)

// Screens =====================================================================
var fiction_instructions1 = {
    type: jsPsychHtmlButtonResponse,
    css_classes: ["narrow-text"],
    stimulus:
        "<h1></h1>" +
        "<div style='text-align: left'>" +
        "<p>This study stems out of an exciting new partnership between researchers from the <b>University of Sussex</b> and a young <b>AI startup</b> based in Brighton, UK, that specializes in making AI generated visual art.</p>" +
        "<p>Our aim is to understand whether computer generated works of art can evoke similar responses to works created by human artists.</p>" +
        "<p>In the next part, you will be presented with images of paintings generated by our algorithm (preceded by the word '<b style='color:" +
        color_cues["AI"] +
        "'>AI-Generated</b>'), intermixed with paintings by human artists that are either original pieces (preceded by the word '<b style='color:" +
        color_cues["Human"] +
        "'>Human-Original</b>') or forgeries (preceded by the word '<b style='color:" +
        color_cues["Forgery"] +
        "'>Human-Forgery</b>') taken from public artwork databases, adjusted to be of similar dimension and aspect as the artificially-generated images.</p > " +
        "<p>The artworks will be <b>briefly presented on the screen</b>. After each image, you will be asked to rate it along several dimensions:</p>" +
        '<li><b style="color: purple">Emotional Valence</b>: Refers to how positive or negative the emotions are that you feel when looking at the image.</li>' +
        '<li><b style="color: purple">Emotional Arousal</b>: Refers to the level of emotional intensity you feel, from very calm and soothing to very exciting or stimulating, when looking at the image.</li>' +
        '<li><b style="color: purple">Liking</b>: To what extent do you like or dislike the image based on personal preference.</li>' +
        "<p>Note that we are interested in your <b>first impression</b>, so please respond according to your gut feelings.</p>" +
        "<p style='text-align: center';>Press start once you are ready.</p>",
    choices: ["Start"],
    data: { screen: "fiction_instructions1" },
}

var fiction_instructions2 = {
    type: jsPsychHtmlButtonResponse,
    css_classes: ["narrow-text"],
    stimulus:
        "<h1></h1>" +
        "<div style='text-align: left'>" +
        "<p>Thank you! In this final phase, we would like to see if you thought our <b>image generation algorithm</b> was able to produce artworks that were indistinguishable from those created by humans.</p>" +
        "<p>But there is <b>something important</b> we need to tell you... In the previous phase, some images were <b style='color: orange'>intentionally mislabelled</b> (we told you it was AI-generated when it was actually either an original human creation or a human forgery and vice versa).</p>" +
        "<p>In this phase, we want you to tell us for each image <b>what you think is the true category</b>! " +
        "We will briefly present all the images once more, and your task is to tell us if you think the image is AI-generated, an original human creation or a human forgery. Indicate your degree of <b>confidence</b> and certainty by selecting larger numbers.</p>" +
        "<p style='text-align: center';>Press start once you are ready.</p>",
    choices: ["Start"],
    data: { screen: "fiction_instructions2" },
    on_finish: function () {
        fiction_trialnumber = 1 // Reset trial counter
    },
}

var fiction_preloadstims = {
    type: jsPsychPreload,
    images: stimuli_list.map((a) => "stimuli/stimuli/" + a.Item),
    message: "Please wait while the experiment is being loaded (it can take a few seconds)",
}

var fiction_fixation1a = {
    type: jsPsychHtmlKeyboardResponse,
    // on_start: function () {
    //     document.body.style.cursor = "none"
    // },
    stimulus:
        "<div style='font-size:500%; position:fixed; text-align: center; top:50%; bottom:50%; right:20%; left:20%'>+</div>",
    choices: ["s"],
    trial_duration: 500,
    save_trial_parameters: { trial_duration: true },
    data: function () {
        return {
            screen: "fiction_fixation1a",
            item: jsPsych.timelineVariable("stimulus"),
        }
    },
}

var fiction_cue = {
    type: jsPsychHtmlKeyboardResponse,
    stimulus: function () {
        var cond = jsPsych.timelineVariable("Condition")
        return (
            "<div style='font-size:450%; position:fixed; text-align: center; top:50%; bottom:50%; right:20%; left:20%; color: " +
            color_cues[cond] +
            "'><b>" +
            text_cue[cond] +
            "</b></div>"
        )
    },
    data: function () {
        var cond = jsPsych.timelineVariable("Condition")
        return {
            screen: "fiction_cue",
            color: color_cues[cond],
            condition: cond,
            item: jsPsych.timelineVariable("stimulus"),
        }
    },
    choices: ["s"],
    trial_duration: 1000,
    save_trial_parameters: { trial_duration: true },
}

var fiction_fixation1b = {
    type: jsPsychHtmlKeyboardResponse,
    stimulus:
        "<div style='font-size:500%; position:fixed; text-align: center; top:50%; bottom:50%; right:20%; left:20%'>+</div>",
    choices: ["s"],
    trial_duration: 500,
    save_trial_parameters: { trial_duration: true },
    data: function () {
        return {
            screen: "fiction_fixation1b",
            item: jsPsych.timelineVariable("stimulus"),
        }
    },
    extensions: [
        {
            type: jsPsychExtensionWebgazer,
            params: { targets: ["#jspsych-html-keyboard-response-stimulus"] },
        },
    ],
}

var fiction_showimage1 = {
    type: jsPsychImageKeyboardResponse,
    stimulus: function () {
        return "stimuli/stimuli/" + jsPsych.timelineVariable("Item")
    },
    stimulus_height: function () {
        if (window.innerHeight < window.innerWidth) {
            return Math.round(0.9 * window.innerHeight)
        } else {
            return null
        }
    },
    stimulus_width: function () {
        if (window.innerHeight > window.innerWidth) {
            return Math.round(0.9 * window.innerWidth)
        } else {
            return null
        }
    },
    trial_duration: 10000,
    choices: ["s"],
    save_trial_parameters: { trial_duration: true },
    data: function () {
        return {
            screen: "fiction_image1",
            window_width: window.innerWidth,
            window_height: window.innerHeight,
            trial_number: fiction_trialnumber,
        }
    },
    on_finish: function () {
        fiction_trialnumber += 1
    },
    // Enable webgazer
    extensions: [
        {
            type: jsPsychExtensionWebgazer,
            params: { targets: ["#jspsych-image-keyboard-response-stimulus"] },
        },
    ],
}

var fiction_ratings1 = {
    type: jsPsychSurvey,
    survey_json: {
        goNextPageAutomatic: true,
        showQuestionNumbers: false,
        showNavigationButtons: false,
        title: function () {
            return (
                "Rating - " + Math.round(((fiction_trialnumber - 1) / stimuli.length) * 100) + "%"
            )
        },
        description: "Rate the following on your personal feelings.",
        pages: [
            {
                elements: [
                    {
                        type: "rating",
                        name: "Emotional Valence",
                        title: "Looking at this artwork makes me feel:",
                        isRequired: true,
                        rateMin: 0,
                        rateMax: 6,
                        minRateDescription: "Very negative",
                        maxRateDescription: "Very positive",
                        displayMode: "buttons",
                    },
                    {
                        type: "rating",
                        name: "Emotional Arousal",
                        title: "Looking at this artwork makes me feel:",
                        isRequired: true,
                        rateMin: 0,
                        rateMax: 6,
                        minRateDescription: "Very calm",
                        maxRateDescription: "Very excited",
                        displayMode: "buttons",
                    },
                    {
                        type: "rating",
                        name: "Liking",
                        title: "I like this artwork:",
                        isRequired: true,
                        rateMin: 0,
                        rateMax: 6,
                        minRateDescription: "Not at all",
                        maxRateDescription: "Very much",
                        displayMode: "buttons",
                    },
                ],
            },
        ],
    },
    data: {
        screen: "fiction_ratings1",
    },
}

var fiction_phase1a = {
    timeline_variables: stimuli.slice(0, Math.ceil(stimuli.length / 2)), //.slice(0, 3), // TODO: remove this
    timeline: [
        fiction_fixation1a,
        fiction_cue,
        fiction_fixation1b,
        fiction_showimage1,
        fiction_ratings1,
    ],
}

var fiction_phase1_break = {
    type: jsPsychHtmlButtonResponse,
    css_classes: ["narrow-text"],
    stimulus:
        "<h1>Break Time</h1>" +
        "<div style='text-align: left'>" +
        "<p>We know these types of experiment can feel a bit repetitive and tedious, " +
        "but it is important for us that you stay focus until the end. Please take this opportunity to <b>take a break and relax your neck and eyes</b>.</p>",
    choices: ["Ready to continue!"],
    data: { screen: "fiction_phase1_break" },
}

var fiction_phase1b = {
    timeline_variables: stimuli.slice(Math.ceil(stimuli.length / 2), stimuli.length), //.slice(0, 3), // TODO: remove this
    timeline: [
        fiction_fixation1a,
        fiction_cue,
        fiction_fixation1b,
        fiction_showimage1,
        fiction_ratings1,
    ],
}

// Stage 2 loops and variables

var fiction_fixation2 = {
    type: jsPsychHtmlKeyboardResponse,
    // on_start: function () {
    //     document.body.style.cursor = "none"
    // },
    stimulus:
        "<div  style='font-size:500%; position:fixed; text-align: center; top:50%; bottom:50%; right:20%; left:20%'>+</div>",
    choices: ["s"],
    trial_duration: 500,
    save_trial_parameters: { trial_duration: true },
    data: { screen: "fiction_fixation2" },
}

var fiction_showimage2 = {
    type: jsPsychImageKeyboardResponse,
    stimulus: function () {
        return "stimuli/stimuli/" + jsPsych.timelineVariable("Item")
    },
    stimulus_height: function () {
        if (window.innerHeight < window.innerWidth) {
            return Math.round(0.9 * window.innerHeight)
        } else {
            return null
        }
    },
    stimulus_width: function () {
        if (window.innerHeight > window.innerWidth) {
            return Math.round(0.9 * window.innerWidth)
        } else {
            return null
        }
    },
    trial_duration: 1000,
    choices: ["s"],
    save_trial_parameters: { trial_duration: true },
    data: { screen: "fiction_image2", trial_number: fiction_trialnumber },
    on_finish: function () {
        fiction_trialnumber += 1
    },
}

var fiction_ratings2 = {
    type: jsPsychSurvey,
    css_classes: ["colored-scale"],
    survey_json: {
        goNextPageAutomatic: true,
        showQuestionNumbers: false,
        showNavigationButtons: false,
        title: function () {
            return (
                "Rating - " + Math.round(((fiction_trialnumber - 1) / stimuli.length) * 100) + "%"
            )
        },
        pages: [
            {
                elements: [
                                        {
                        title: "Which category do you believe the image belongs to?",
                        name: "True Condition",
                        type: "radiogroup",
                        choices: ["AI Generated", "Human Original", "Human Forgery"],
                        isRequired: true,
                        colCount: 0,
                    },
                    {
                        type: "rating",
                        name: "Realness",
                        title: "Indicate your confidence:",
                        isRequired: true,
                        // rateValues: [
                        //     {
                        //         value: -1,
                        //         text: "-4",
                        //     },
                        //     {
                        //         value: -0.75,
                        //         text: "-3",
                        //     },
                        //     {
                        //         value: -0.5, // 1/2
                        //         text: "-2",
                        //     },
                        //     {
                        //         value: -0.25, // 1/4
                        //         text: "-1",
                        //     },
                        //     // {
                        //     //     value: 0,
                        //     //     text: "0",
                        //     // },
                        //     {
                        //         value: 0.25, // 1/4
                        //         text: "1",
                        //     },
                        //     {
                        //         value: 0.5, // 1/2
                        //         text: "2",
                        //     },
                        //     {
                        //         value: 0.75, // 3/4
                        //         text: "3",
                        //     },
                        //     {
                        //         value: 1,
                        //         text: "4", // "4 (100% Certain)",
                        //     },
                        // ],
                        rateMin: -3,
                        rateMax: 3,
                        minRateDescription: "Not confident at all",
                        maxRateDescription: "Very confident",
                        displayMode: "buttons",
                    },
                ],
            },
        ],
    },
    data: {
        screen: "fiction_ratings2",
    },
}

var fiction_phase2 = {
    timeline_variables: shuffleArray(stimuli), // .slice(0, 3) TODO: remove this
    timeline: [fiction_fixation2, fiction_showimage2, fiction_ratings2],
}

// Feedback ====================================================================
/*
var fiction_feedback1 = {
    type: jsPsychSurvey,
    survey_json: {
        title: "Thank you!",
        description: "Before we start the second phase, we wanted to know your thoughts.",
        showQuestionNumbers: false,
        elements: [
            {
                type: "checkbox",
                name: "Feedback_1",
                title: "Face Attractiveness",
                description: "Please select all that apply",
                choices: [
                    "Some faces were really attractive",
                    "No face was particularly attractive",
                    "AI-generated images were more attractive than the photos",
                    "AI-generated images were less attractive than the photos",
                ],
                showOtherItem: true,
                showSelectAllItem: false,
                showNoneItem: false,
            },
            {
                type: "checkbox",
                name: "Feedback_2",
                title: "AI-Generation Algorithm",
                description: "Please select all that apply",
                choices: [
                    "The difference between the photos and the AI-generated images was obvious",
                    "The difference between the photos and the AI-generated images was subtle",
                    "I didn't see any difference between photos and AI-generated images",
                    "I felt like the labels ('Photograph' and 'AI-Generated') were not always correct",
                    "I felt like the labels were reversed (e.g., 'Photograph' for AI-generated images and vice versa)",
                    "I feel like all the images were photos",
                    "I feel like all the images were AI-generated",
                ],
                showOtherItem: true,
                showSelectAllItem: false,
                showNoneItem: false,
            },
            {
                visibleIf: "{Feedback_2} anyof ['I feel like all the images were photos']",
                title: "How certain are you that all images were photos?",
                name: "Feedback_2_ConfidenceReal",
                type: "rating",
                rateMin: 0,
                rateMax: 5,
                minRateDescription: "Not at all",
                maxRateDescription: "Completely certain",
            },
            {
                visibleIf: "{Feedback_2} anyof ['I feel like all the images were AI-generated']",
                title: "How certain are you that all images were AI-generated?",
                name: "Feedback_2_ConfidenceFake",
                type: "rating",
                rateMin: 0,
                rateMax: 5,
                minRateDescription: "Not at all",
                maxRateDescription: "Completely certain",
            },
        ],
    },
    data: {
        screen: "fiction_feedback1",
    },
}
*/
